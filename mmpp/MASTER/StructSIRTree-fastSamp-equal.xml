<!-- Simulate an inheritance tree from the SIR epidemic model -->

<beast version='2.0' namespace='master
                                :master.model
                                :master.conditions
                                :master.outputs
                                :master.postprocessors'>
  <run spec='InheritanceEnsemble'
       nTraj="150"
       samplePopulationSizes="true"
       verbosity="1"
       seed="45">

    <model spec='Model' id='model'>
      <populationType spec='PopulationType' id='S' typeName='S' dim="2"/>
      <populationType spec='PopulationType' id='I' typeName='I' dim="2"/>
      <populationType spec='PopulationType' id='I_sample' typeName='I_sample' dim="2"/>
      <population spec='Population' id='R' populationName='R'/>
      
      <!-- 100 units till transmission -->
      <reactionGroup spec='ReactionGroup' reactionGroupName="Infection">
	    <reaction spec='Reaction' rate="0.00075">
	    S[0] + I[0] -> 2I[0]
  	    </reaction>
	    <reaction spec='Reaction' rate="0.00675">
	    S[1] + I[1] -> 2I[1]
	    </reaction>
      </reactionGroup>
      
      <!-- 10 units  -->
      <reactionGroup spec='ReactionGroup' reactionGroupName="Migration">
        <reaction spec='Reaction' rate="0.05">
          S[0] -> S[1]
        </reaction>
        <reaction spec='Reaction' rate="0.05">
          S[1] -> S[0]
        </reaction>
        <reaction spec='Reaction' rate="0.05">
          I[0] -> I[1]
        </reaction>
        <reaction spec='Reaction' rate="0.05">
          I[1] -> I[0]
        </reaction>
      </reactionGroup>
      
      <!-- 100 units till removal  -->
      <!-- Similarly, cranked up because of within-host evolution time scale. -->
      <reactionGroup spec='ReactionGroup' reactionGroupName="Removal">
        <reaction spec='Reaction' rate="1.0">
          I[0] -> R
        </reaction>
        <reaction spec='Reaction' rate="1.0">
          I[1] -> R
        </reaction>
      </reactionGroup>

      <!-- 2 units till sampling -->
      <!--  This is really cranked up!  Fudging rapid within-host evolution. -->
      <reactionGroup spec='ReactionGroup' reactionGroupName="Sampling">
          <reaction spec='Reaction' rate="1.0">
              I[0] -> I_sample[0]
          </reaction>
          <reaction spec='Reaction' rate="2.0">
              I[1] -> I_sample[1]
          </reaction>
      </reactionGroup>
    </model>
    
    <!-- Starting conditions -->
    <initialState spec='InitState'>
      <populationSize spec='PopulationSize' size='8999'>
        <population spec='Population' type='@S' location="0"/>
      </populationSize>
      <populationSize spec='PopulationSize' size='1000'>
        <population spec='Population' type='@S' location="1"/>
      </populationSize>
      <lineageSeed spec='Individual' time="0.0">
	    <population spec='Population' type='@I' location="0"/>
	  </lineageSeed>
    </initialState>

    <!-- Stopping conditions -->
    <lineageEndCondition spec='LineageEndCondition' nLineages="0"/>
    <leafCountEndCondition spec='LeafCountEndCondition' nLeaves="2000"/>

    <!-- Keep only sampled lineages. -->
    <inheritancePostProcessor spec='LineageFilter' reactionName="Sampling"/>
    
    <output spec='JsonOutput' fileName='../data2/fastSamp-equal.json'/>
    <output spec='NewickOutput' fileName='../data2/fastSamp-equal.newick'/>
    <output spec='NexusOutput' fileName='../data2/fastSamp-equal.nexus' collapseSingleChildNodes="true"/>
  </run>
</beast>

